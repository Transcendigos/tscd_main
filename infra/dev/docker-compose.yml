version: '3.8'

services:
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infra/dev/Dockerfile_frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ../../frontend/src:/app/src
      - ../../frontend/index.html:/app/index.html
      - ../../frontend/pong_dev.html:/app/pong_dev.html
      - ../../frontend/solong_dev.html:/app/solong_dev.html
      - ../../frontend/dev/tsconfig.json:/app/tsconfig.json
      - ../../frontend/dev/vite.config.ts:/app/vite.config.ts
      - ../../frontend/public/:/app/public/
    working_dir: /app
    command: npm run dev
    environment:
      - NODE_ENV=development
    expose:
      - "5173"

  backend:
    build:
      context: ../..
      dockerfile: infra/dev/Dockerfile_backend
    container_name: backend
    volumes:
      - sqlite-data:/app/data
      - ../../logs:/logs
      - ../../frontend/public/uploads:/app/public/uploads
    ports:
      - "3000:3000"
    depends_on:
      - redis_chat
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis_chat:6379

  redis_chat:
    image: redis:alpine
    container_name: redis_chat
    ports:
      - "6380:6379"
    volumes:
      - redis-chat-data:/data
    restart: unless-stopped


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.18.1
    container_name: logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ../../logs:/logs
    ports:
      - "5044:5044"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.1
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9101:9100"
    restart: unless-stopped

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    environment:
      - REDIS_ADDR=redis://redis_chat:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis_chat
    restart: unless-stopped

volumes:
  sqlite-data:
  esdata:
  redis-chat-data:
  prometheus-data:
  grafana-storage: